<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="libnm-glib-NMSettings">
<refmeta>
<refentrytitle role="top_of_page">NMSettings</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>LIBNM-GLIB Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>NMSettings</refname>
<refpurpose></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



#define             <link linkend="NM-SETTINGS-ERROR:CAPS">NM_SETTINGS_ERROR</link>
<link linkend="GQuark">GQuark</link>              <link linkend="nm-settings-error-quark">nm_settings_error_quark</link>             (void);
#define             <link linkend="NM-EXPORTED-CONNECTION-CONNECTION:CAPS">NM_EXPORTED_CONNECTION_CONNECTION</link>
#define             <link linkend="NM-EXPORTED-CONNECTION-DBUS-METHOD-INVOCATION:CAPS">NM_EXPORTED_CONNECTION_DBUS_METHOD_INVOCATION</link>
                    <link linkend="NMExportedConnection">NMExportedConnection</link>;
<link linkend="NMExportedConnection">NMExportedConnection</link>* <link linkend="nm-exported-connection-new">nm_exported_connection_new</link>        (<link linkend="NMConnection">NMConnection</link> *wrapped);
<link linkend="void">void</link>                <link linkend="nm-exported-connection-register-object">nm_exported_connection_register_object</link>
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="NMConnectionScope">NMConnectionScope</link> scope,
                                                         <link linkend="DBusGConnection">DBusGConnection</link> *dbus_connection);
<link linkend="NMConnection">NMConnection</link>*       <link linkend="nm-exported-connection-get-connection">nm_exported_connection_get_connection</link>
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-exported-connection-update">nm_exported_connection_update</link>       (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *new_settings,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="gboolean">gboolean</link>            <link linkend="nm-exported-connection-delete">nm_exported_connection_delete</link>       (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GError">GError</link> **err);
<link linkend="void">void</link>                <link linkend="nm-exported-connection-signal-updated">nm_exported_connection_signal_updated</link>
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *new_settings);
<link linkend="void">void</link>                <link linkend="nm-exported-connection-signal-removed">nm_exported_connection_signal_removed</link>
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection);
#define             <link linkend="NM-TYPE-SETTINGS:CAPS">NM_TYPE_SETTINGS</link>
#define             <link linkend="NM-SETTINGS:CAPS">NM_SETTINGS</link>                         (obj)
#define             <link linkend="NM-SETTINGS-CLASS:CAPS">NM_SETTINGS_CLASS</link>                   (klass)
#define             <link linkend="NM-IS-SETTINGS:CAPS">NM_IS_SETTINGS</link>                      (obj)
#define             <link linkend="NM-IS-SETTINGS-CLASS:CAPS">NM_IS_SETTINGS_CLASS</link>                (klass)
#define             <link linkend="NM-SETTINGS-GET-CLASS:CAPS">NM_SETTINGS_GET_CLASS</link>               (obj)
                    <link linkend="NMSettings">NMSettings</link>;
<link linkend="GType">GType</link>               <link linkend="nm-settings-get-type">nm_settings_get_type</link>                (void);
<link linkend="GSList">GSList</link>*             <link linkend="nm-settings-list-connections">nm_settings_list_connections</link>        (<link linkend="NMSettings">NMSettings</link> *settings);
<link linkend="void">void</link>                <link linkend="nm-settings-signal-new-connection">nm_settings_signal_new_connection</link>   (<link linkend="NMSettings">NMSettings</link> *settings,
                                                         <link linkend="NMExportedConnection">NMExportedConnection</link> *connection);

</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>

</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="NM-SETTINGS-ERROR:CAPS" role="macro"/>NM_SETTINGS_ERROR</title>
<indexterm><primary>NM_SETTINGS_ERROR</primary></indexterm><programlisting>#define NM_SETTINGS_ERROR nm_settings_error_quark ()
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="nm-settings-error-quark" role="function"/>nm_settings_error_quark ()</title>
<indexterm><primary>nm_settings_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              nm_settings_error_quark             (void);</programlisting>
<para>
Setting error quark.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the setting error quark
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-EXPORTED-CONNECTION-CONNECTION:CAPS" role="macro"/>NM_EXPORTED_CONNECTION_CONNECTION</title>
<indexterm><primary>NM_EXPORTED_CONNECTION_CONNECTION</primary></indexterm><programlisting>#define NM_EXPORTED_CONNECTION_CONNECTION "connection"
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="NM-EXPORTED-CONNECTION-DBUS-METHOD-INVOCATION:CAPS" role="macro"/>NM_EXPORTED_CONNECTION_DBUS_METHOD_INVOCATION</title>
<indexterm><primary>NM_EXPORTED_CONNECTION_DBUS_METHOD_INVOCATION</primary></indexterm><programlisting>#define NM_EXPORTED_CONNECTION_DBUS_METHOD_INVOCATION "nm-exported-connection-dbus-method-invocation"
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="NMExportedConnection" role="struct"/>NMExportedConnection</title>
<indexterm><primary>NMExportedConnection</primary></indexterm><programlisting>typedef struct {
	GObject parent;
} NMExportedConnection;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-new" role="function"/>nm_exported_connection_new ()</title>
<indexterm><primary>nm_exported_connection_new</primary></indexterm><programlisting><link linkend="NMExportedConnection">NMExportedConnection</link>* nm_exported_connection_new        (<link linkend="NMConnection">NMConnection</link> *wrapped);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>wrapped</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-register-object" role="function"/>nm_exported_connection_register_object ()</title>
<indexterm><primary>nm_exported_connection_register_object</primary></indexterm><programlisting><link linkend="void">void</link>                nm_exported_connection_register_object
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="NMConnectionScope">NMConnectionScope</link> scope,
                                                         <link linkend="DBusGConnection">DBusGConnection</link> *dbus_connection);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>scope</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dbus_connection</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-get-connection" role="function"/>nm_exported_connection_get_connection ()</title>
<indexterm><primary>nm_exported_connection_get_connection</primary></indexterm><programlisting><link linkend="NMConnection">NMConnection</link>*       nm_exported_connection_get_connection
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-update" role="function"/>nm_exported_connection_update ()</title>
<indexterm><primary>nm_exported_connection_update</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_exported_connection_update       (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *new_settings,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_settings</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-delete" role="function"/>nm_exported_connection_delete ()</title>
<indexterm><primary>nm_exported_connection_delete</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            nm_exported_connection_delete       (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GError">GError</link> **err);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>err</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-signal-updated" role="function"/>nm_exported_connection_signal_updated ()</title>
<indexterm><primary>nm_exported_connection_signal_updated</primary></indexterm><programlisting><link linkend="void">void</link>                nm_exported_connection_signal_updated
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection,
                                                         <link linkend="GHashTable">GHashTable</link> *new_settings);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>new_settings</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-exported-connection-signal-removed" role="function"/>nm_exported_connection_signal_removed ()</title>
<indexterm><primary>nm_exported_connection_signal_removed</primary></indexterm><programlisting><link linkend="void">void</link>                nm_exported_connection_signal_removed
                                                        (<link linkend="NMExportedConnection">NMExportedConnection</link> *connection);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-TYPE-SETTINGS:CAPS" role="macro"/>NM_TYPE_SETTINGS</title>
<indexterm><primary>NM_TYPE_SETTINGS</primary></indexterm><programlisting>#define NM_TYPE_SETTINGS            (nm_settings_get_type ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="NM-SETTINGS:CAPS" role="macro"/>NM_SETTINGS()</title>
<indexterm><primary>NM_SETTINGS</primary></indexterm><programlisting>#define NM_SETTINGS(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), NM_TYPE_SETTINGS, NMSettings))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-SETTINGS-CLASS:CAPS" role="macro"/>NM_SETTINGS_CLASS()</title>
<indexterm><primary>NM_SETTINGS_CLASS</primary></indexterm><programlisting>#define NM_SETTINGS_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), NM_TYPE_SETTINGS, NMSettingsClass))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-IS-SETTINGS:CAPS" role="macro"/>NM_IS_SETTINGS()</title>
<indexterm><primary>NM_IS_SETTINGS</primary></indexterm><programlisting>#define NM_IS_SETTINGS(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), NM_TYPE_SETTINGS))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-IS-SETTINGS-CLASS:CAPS" role="macro"/>NM_IS_SETTINGS_CLASS()</title>
<indexterm><primary>NM_IS_SETTINGS_CLASS</primary></indexterm><programlisting>#define NM_IS_SETTINGS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), NM_TYPE_SETTINGS))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>klass</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NM-SETTINGS-GET-CLASS:CAPS" role="macro"/>NM_SETTINGS_GET_CLASS()</title>
<indexterm><primary>NM_SETTINGS_GET_CLASS</primary></indexterm><programlisting>#define NM_SETTINGS_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), NM_TYPE_SETTINGS, NMSettingsClass))
</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>obj</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="NMSettings" role="struct"/>NMSettings</title>
<indexterm><primary>NMSettings</primary></indexterm><programlisting>typedef struct {
	GObject parent;
} NMSettings;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="nm-settings-get-type" role="function"/>nm_settings_get_type ()</title>
<indexterm><primary>nm_settings_get_type</primary></indexterm><programlisting><link linkend="GType">GType</link>               nm_settings_get_type                (void);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-settings-list-connections" role="function"/>nm_settings_list_connections ()</title>
<indexterm><primary>nm_settings_list_connections</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             nm_settings_list_connections        (<link linkend="NMSettings">NMSettings</link> *settings);</programlisting>
<para>
Lists all the available connections.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>settings</parameter>&nbsp;:</term>
<listitem><simpara> 
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GSList"><type>GSList</type></link> containing <link linkend="NMExportedConnection"><type>NMExportedConnection</type></link><!-- -->s
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="nm-settings-signal-new-connection" role="function"/>nm_settings_signal_new_connection ()</title>
<indexterm><primary>nm_settings_signal_new_connection</primary></indexterm><programlisting><link linkend="void">void</link>                nm_settings_signal_new_connection   (<link linkend="NMSettings">NMSettings</link> *settings,
                                                         <link linkend="NMExportedConnection">NMExportedConnection</link> *connection);</programlisting>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>settings</parameter>&nbsp;:</term>
<listitem><simpara>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>connection</parameter>&nbsp;:</term>
<listitem><simpara>


</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>





<refsect1><refsect2 /><refsect2 /></refsect1>
</refentry>
